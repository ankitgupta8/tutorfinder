workflows:
  react-native-android:
    name: React Native Android
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      node: latest
      java: 11
      android_signing:
        - keystore_reference
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "io.codemagic.sample"
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Build Android release
        script: |
          cd android
          ./gradlew bundleRelease
    artifacts:
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - user_1@example.com
        notify:
          success: true
          failure: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true

  react-native-ios:
    name: React Native iOS
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      node: latest
      xcode: latest
      cocoapods: default
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.sample
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Build iOS
        script: |
          xcodebuild build -workspace "ios/YourProjectName.xcworkspace" -scheme "YourProjectName" -configuration Release -sdk iphoneos CODE_SIGN_IDENTITY="$CM_CODE_SIGN_IDENTITY" PROVISIONING_PROFILE="$CM_PROVISIONING_PROFILE" -archivePath "ios/build/YourProjectName.xcarchive" ARCHIVE=YES
      - name: Create .ipa
        script: |
          xcodebuild -exportArchive -archivePath "ios/build/YourProjectName.xcarchive" -exportPath "ios/build/ios" -exportOptionsPlist "ios/exportOptions.plist"
    artifacts:
      - ios/build/ios/YourProjectName.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true

  react-native-ios-and-android:
    name: React Native iOS and Android
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      node: latest
      xcode: latest
      cocoapods: default
      java: 11
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.sample
      android_signing:
        - keystore_reference
      groups:
        - google_play
        - app_store_credentials
      vars:
        PACKAGE_NAME: "io.codemagic.sample"
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: 'main'
          include: true
        - pattern: 'develop'
          include: true
    scripts:
      - name: Install npm dependencies
        script: |
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Build Android release
        script: |
          cd android
          ./gradlew bundleRelease
      - name: Build iOS
        script: |
          xcodebuild build -workspace "ios/YourProjectName.xcworkspace" -scheme "YourProjectName" -configuration Release -sdk iphoneos CODE_SIGN_IDENTITY="$CM_CODE_SIGN_IDENTITY" PROVISIONING_PROFILE="$CM_PROVISIONING_PROFILE" -archivePath "ios/build/YourProjectName.xcarchive" ARCHIVE=YES
      - name: Create .ipa
        script: |
          xcodebuild -exportArchive -archivePath "ios/build/YourProjectName.xcarchive" -exportPath "ios/build/ios" -exportOptionsPlist "ios/exportOptions.plist"
    artifacts:
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/*.apk
      - ios/build/ios/YourProjectName.ipa
      - /tmp/xcodebuild_logs/*.log
    publishing:
      email:
        recipients:
          - user_1@example.com
        notify:
          success: true
          failure: true
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
